/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Decoda {

class DecodaPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="SWIGRegisterExceptionCallbacks_Decoda")]
    public static extern void SWIGRegisterExceptionCallbacks_Decoda(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_Decoda")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_Decoda(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_Decoda(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_Decoda(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(DecodaPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(DecodaPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="SWIGRegisterStringCallback_Decoda")]
    public static extern void SWIGRegisterStringCallback_Decoda(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_Decoda(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static DecodaPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_new_DebugEvent")]
  public static extern global::System.IntPtr new_DebugEvent(int jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugEvent_Clone")]
  public static extern global::System.IntPtr DebugEvent_Clone(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugEvent_GetEventId")]
  public static extern int DebugEvent_GetEventId(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugEvent_GetVm")]
  public static extern uint DebugEvent_GetVm(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugEvent_GetScriptIndex")]
  public static extern uint DebugEvent_GetScriptIndex(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugEvent_SetScriptIndex")]
  public static extern void DebugEvent_SetScriptIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugEvent_GetLine")]
  public static extern uint DebugEvent_GetLine(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugEvent_SetLine")]
  public static extern void DebugEvent_SetLine(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugEvent_GetEnabled")]
  public static extern bool DebugEvent_GetEnabled(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugEvent_SetEnabled")]
  public static extern void DebugEvent_SetEnabled(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugEvent_GetMessageStr")]
  public static extern string DebugEvent_GetMessageStr(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugEvent_SetMessage")]
  public static extern void DebugEvent_SetMessage(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugEvent_GetMessageType")]
  public static extern int DebugEvent_GetMessageType(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugEvent_SetMessageType")]
  public static extern void DebugEvent_SetMessageType(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_delete_DebugEvent")]
  public static extern void delete_DebugEvent(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_delete_IEvtHandler")]
  public static extern void delete_IEvtHandler(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_IEvtHandler_AddPendingEvent")]
  public static extern void IEvtHandler_AddPendingEvent(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_new_IEvtHandler")]
  public static extern global::System.IntPtr new_IEvtHandler();

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_IEvtHandler_director_connect")]
  public static extern void IEvtHandler_director_connect(global::System.Runtime.InteropServices.HandleRef jarg1, IEvtHandler.SwigDelegateIEvtHandler_0 delegate0);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Script_name_set")]
  public static extern void DebugFrontend_Script_name_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Script_name_get")]
  public static extern string DebugFrontend_Script_name_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Script_source_set")]
  public static extern void DebugFrontend_Script_source_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Script_source_get")]
  public static extern string DebugFrontend_Script_source_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Script_state_set")]
  public static extern void DebugFrontend_Script_state_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Script_state_get")]
  public static extern int DebugFrontend_Script_state_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Script_lineMapper_set")]
  public static extern void DebugFrontend_Script_lineMapper_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Script_lineMapper_get")]
  public static extern global::System.IntPtr DebugFrontend_Script_lineMapper_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_new_DebugFrontend_Script")]
  public static extern global::System.IntPtr new_DebugFrontend_Script();

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_delete_DebugFrontend_Script")]
  public static extern void delete_DebugFrontend_Script(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_StackFrame_scriptIndex_set")]
  public static extern void DebugFrontend_StackFrame_scriptIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_StackFrame_scriptIndex_get")]
  public static extern uint DebugFrontend_StackFrame_scriptIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_StackFrame_line_set")]
  public static extern void DebugFrontend_StackFrame_line_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_StackFrame_line_get")]
  public static extern uint DebugFrontend_StackFrame_line_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_StackFrame_function_set")]
  public static extern void DebugFrontend_StackFrame_function_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_StackFrame_function_get")]
  public static extern string DebugFrontend_StackFrame_function_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_new_DebugFrontend_StackFrame")]
  public static extern global::System.IntPtr new_DebugFrontend_StackFrame();

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_delete_DebugFrontend_StackFrame")]
  public static extern void delete_DebugFrontend_StackFrame(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Process_id_set")]
  public static extern void DebugFrontend_Process_id_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Process_id_get")]
  public static extern uint DebugFrontend_Process_id_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Process_name_set")]
  public static extern void DebugFrontend_Process_name_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Process_name_get")]
  public static extern string DebugFrontend_Process_name_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Process_title_set")]
  public static extern void DebugFrontend_Process_title_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Process_title_get")]
  public static extern string DebugFrontend_Process_title_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_new_DebugFrontend_Process")]
  public static extern global::System.IntPtr new_DebugFrontend_Process();

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_delete_DebugFrontend_Process")]
  public static extern void delete_DebugFrontend_Process(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Get")]
  public static extern global::System.IntPtr DebugFrontend_Get();

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Destroy")]
  public static extern void DebugFrontend_Destroy();

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_SetEventHandler")]
  public static extern void DebugFrontend_SetEventHandler(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Start")]
  public static extern bool DebugFrontend_Start(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, string jarg4, string jarg5, bool jarg6, bool jarg7);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Shutdown")]
  public static extern void DebugFrontend_Shutdown(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Attach")]
  public static extern bool DebugFrontend_Attach(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_AttachDebuggerToHost")]
  public static extern bool DebugFrontend_AttachDebuggerToHost(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Stop")]
  public static extern void DebugFrontend_Stop(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Continue")]
  public static extern void DebugFrontend_Continue(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Break")]
  public static extern void DebugFrontend_Break(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_StepOver")]
  public static extern void DebugFrontend_StepOver(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_StepInto")]
  public static extern void DebugFrontend_StepInto(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_DoneLoadingScript")]
  public static extern void DebugFrontend_DoneLoadingScript(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_Evaluate")]
  public static extern string DebugFrontend_Evaluate(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_ToggleBreakpoint")]
  public static extern void DebugFrontend_ToggleBreakpoint(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, uint jarg3, uint jarg4);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_RemoveAllBreakPoints")]
  public static extern void DebugFrontend_RemoveAllBreakPoints(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_GetScript")]
  public static extern global::System.IntPtr DebugFrontend_GetScript(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_GetScriptIndex")]
  public static extern uint DebugFrontend_GetScriptIndex(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_GetNumStackFrames")]
  public static extern uint DebugFrontend_GetNumStackFrames(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_GetStackFrame")]
  public static extern global::System.IntPtr DebugFrontend_GetStackFrame(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_GetState")]
  public static extern int DebugFrontend_GetState(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_GetProcesses")]
  public static extern void DebugFrontend_GetProcesses(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("Decoda", EntryPoint="CSharp_DebugFrontend_IgnoreException")]
  public static extern void DebugFrontend_IgnoreException(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);
}

}
